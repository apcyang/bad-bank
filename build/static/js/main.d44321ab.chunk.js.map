{"version":3,"sources":["navbar.js","context.js","home.js","createaccount.js","deposit.js","withdraw.js","balance.js","alldata.js","index.js"],"names":["NavBar","className","href","type","id","UserContext","ReactRouterDOM","React","createContext","Card","props","bgcolor","txtcolor","style","width","margin","textAlign","header","title","text","body","status","Home","src","alt","CreateAccount","useState","show","setShow","setStatus","name","setName","email","setEmail","password","setPassword","ctx","useContext","disableSubmit","validate","field","label","setTimeout","toUpperCase","isNaN","test","String","toLowerCase","validateEmail","placeholder","value","onChange","e","currentTarget","onClick","console","log","users","push","balance","alert","disabled","Deposit","depositAmount","setDepositAmount","checkAmount","amount","str","parseFloat","padding","target","display","maxWidth","newBalance","setBalance","Withdraw","withdrawAmount","setWithdrawAmount","Balance","AllData","Table","responsive","Spa","Provider","path","exact","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d44321ab.chunk.js","sourcesContent":["export default function NavBar() {\r\n  return (\r\n    <>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          BadBank\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/CreateAccount/\">\r\n                Create Account\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/deposit/\">\r\n                Deposit\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/withdraw/\">\r\n                Withdraw\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#/alldata/\">\r\n                AllData\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import * as ReactRouterDOM from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst Route = ReactRouterDOM.Route;\r\nconst Link = ReactRouterDOM.Link;\r\nconst HashRouter = ReactRouterDOM.HashRouter;\r\nconst UserContext = React.createContext(null);\r\n\r\nfunction Card(props) {\r\n  function classes() {\r\n    const bg = props.bgcolor ? \" bg-\" + props.bgcolor : \" \";\r\n    const txt = props.txtcolor ? \" text-\" + props.txtcolor : \" text-white\";\r\n    return \"card mb-3 \" + bg + txt;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classes()}\r\n      style={{ width: \"100%\", margin: \"0 auto\", textAlign: \"center\" }}\r\n    >\r\n      <div className=\"card-header\">{props.header}</div>\r\n      <div className=\"card-body\">\r\n        {props.title && <h5 className=\"card-title\">{props.title}</h5>}\r\n        {props.text && <p className=\"card-text\">{props.text}</p>}\r\n        {props.body}\r\n        {props.status && <div id=\"createStatus\">{props.status}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { UserContext, Card };\r\n","import { Card } from \"./context\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Card\r\n      txtcolor=\"black\"\r\n      header=\"BadBank Landing Module\"\r\n      title=\"Welcome to the bank\"\r\n      text=\"You can move around using the navigation bar.\"\r\n      body={<img src=\"bank.png\" className=\"img-fluid\" alt=\"Responsive image\" />}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { UserContext } from \"./context\";\r\nimport { Card } from \"./context\";\r\n\r\nexport default function CreateAccount() {\r\n  const [show, setShow] = React.useState(true);\r\n  const [status, setStatus] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const ctx = React.useContext(UserContext);\r\n  const disableSubmit = name && email && password ? false : true;\r\n\r\n  function validate(field, label) {\r\n    if (!field) {\r\n      setStatus(\"Error: \" + label);\r\n      setTimeout(() => setStatus(\"\"), 3000);\r\n      return false;\r\n    } else {\r\n      switch (label.toUpperCase()) {\r\n        case \"NAME\":\r\n          if (typeof field != \"boolean\" && !isNaN(field)) {\r\n            setStatus(\"Name should not contain numeric characters\");\r\n            setTimeout(() => setStatus(\"\"), 3000);\r\n            return false;\r\n          }\r\n          break;\r\n        case \"EMAIL\":\r\n          if (!validateEmail(email)) {\r\n            setStatus(\"Email is in an invalid format\");\r\n            setTimeout(() => setStatus(\"\"), 3000);\r\n            return false;\r\n          }\r\n          break;\r\n        case \"PASSWORD\":\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function validateEmail(email) {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  function handleCreate() {\r\n    console.log(name, email, password);\r\n    if (!validate(name, \"name\")) return;\r\n    if (!validate(email, \"email\")) return;\r\n    if (!validate(password, \"password\")) return;\r\n    ctx.users.push({ name, email, password, balance: 100 });\r\n    setShow(false);\r\n    alert(\"Successfully Created Account\");\r\n  }\r\n\r\n  function clearForm() {\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setShow(true);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      bgcolor=\"primary\"\r\n      header=\"Create Account\"\r\n      status={status}\r\n      body={\r\n        show ? (\r\n          <>\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            Email address\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            Password\r\n            <br />\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.currentTarget.value)}\r\n            />\r\n            <br />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-light\"\r\n              onClick={handleCreate}\r\n              disabled={disableSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h5>Success</h5>\r\n            <button type=\"submit\" className=\"btn btn-light\" onClick={clearForm}>\r\n              Add another account\r\n            </button>\r\n          </>\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { Card } from \"./context\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Deposit(props) {\r\n  const [depositAmount, setDepositAmount] = useState(0);\r\n  const disableSubmit = depositAmount ? false : true;\r\n\r\n  const deposit = () => {\r\n    if (typeof depositAmount != \"number\") {\r\n      alert(\"Enter numeric values only\");\r\n      return;\r\n    }\r\n\r\n    let newBalance = parseFloat(props.balance) + parseFloat(depositAmount);\r\n    props.setBalance(newBalance);\r\n    console.log(newBalance);\r\n  };\r\n\r\n  function isNumeric(str) {\r\n    if (typeof str != \"string\") return false; // we only process strings!\r\n    return (\r\n      !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n      !isNaN(parseFloat(str))\r\n    ); // ...and ensure strings of whitespace fail\r\n  }\r\n\r\n  const checkAmount = (amount) => {\r\n    if (amount == \"\" || amount == null || !isNumeric(amount)) {\r\n      alert(\"Please enter numeric values only\");\r\n      amount = 0;\r\n    }\r\n    setDepositAmount(parseFloat(amount));\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      txtcolor=\"black\"\r\n      header=\"BadBank Deposit\"\r\n      title=\"\"\r\n      text=\"\"\r\n      body={\r\n        <div>\r\n          <div style={{ padding: \"2%\" }}>Balance: ${props.balance}</div>\r\n          <div style={{ padding: \"2%\" }}>\r\n            Deposit Amount: &nbsp;&nbsp;&nbsp;\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"depositAmount\"\r\n              placeholder=\"Deposit Amount\"\r\n              value={depositAmount}\r\n              onChange={(e) => checkAmount(e.target.value)}\r\n              style={{ display: \"inline-block\", maxWidth: \"35%\" }}\r\n            />\r\n            <br></br>\r\n          </div>\r\n          <div style={{ padding: \"2%\" }}>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-light\"\r\n              onClick={deposit}\r\n              disabled={disableSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { Card } from \"./context\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Withdraw(props) {\r\n  const [withdrawAmount, setWithdrawAmount] = useState(0);\r\n  const disableSubmit = withdrawAmount ? false : true;\r\n\r\n  const withdraw = () => {\r\n    if (withdrawAmount > props.balance) {\r\n      alert(\"Transaction failed\");\r\n      return;\r\n    }\r\n\r\n    if (typeof withdrawAmount != \"number\") {\r\n      console.log(typeof withdrawAmount);\r\n      alert(\"Enter numeric values only\");\r\n      return;\r\n    }\r\n\r\n    let newBalance = parseFloat(props.balance) - parseFloat(withdrawAmount);\r\n    props.setBalance(newBalance);\r\n    console.log(newBalance);\r\n  };\r\n\r\n  function isNumeric(str) {\r\n    if (typeof str != \"string\") return false // we only process strings!  \r\n    return !isNaN(str) && // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\r\n           !isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\r\n  }\r\n\r\n  const checkAmount = (amount) => {\r\n    if (amount == \"\" || amount == null || !isNumeric(amount)) {\r\n      alert(\"Please enter numeric values only\");\r\n      amount = 0;\r\n    }\r\n    setWithdrawAmount(parseFloat(amount));\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      txtcolor=\"black\"\r\n      header=\"BadBank Withdraw\"\r\n      title=\"\"\r\n      text=\"\"\r\n      body={\r\n        <div>\r\n          <div style={{ padding: \"2%\" }}>Balance: ${props.balance}</div>\r\n          <div style={{ padding: \"2%\" }}>\r\n            Withdraw Amount: &nbsp;&nbsp;&nbsp;\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"withdrawAmount\"\r\n              placeholder=\"Withdraw Amount\"\r\n              value={withdrawAmount}\r\n              onChange={(e) => checkAmount(e.target.value)}\r\n              style={{ display: \"inline-block\", maxWidth: \"35%\" }}\r\n            />\r\n            <br></br>\r\n          </div>\r\n          <div style={{ padding: \"2%\" }}>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-light\"\r\n              onClick={withdraw}\r\n              disabled={disableSubmit}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n}\r\n","export default function Balance() {\r\n  return <h1>Balance</h1>;\r\n}\r\n","import React from \"react\";\r\nimport { UserContext } from \"./context\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nexport default function AllData() {\r\n  const ctx = React.useContext(UserContext);\r\n  return (\r\n    <>\r\n      <Table responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Password</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>Venda</td>\r\n            <td>venda.wen@icloud.com</td>\r\n            <td>Password</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","import ReactDOM from \"react-dom\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport NavBar from \"./navbar\";\r\nimport { UserContext } from \"./context\";\r\nimport Home from \"./home\";\r\nimport CreateAccount from \"./createaccount\";\r\nimport Login from \"./login\";\r\nimport Deposit from \"./deposit\";\r\nimport Withdraw from \"./withdraw\";\r\nimport Balance from \"./balance\";\r\nimport AllData from \"./alldata\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Spa() {\r\n  const [balance, setBalance] = useState(100);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <UserContext.Provider\r\n        value={{\r\n          users: [\r\n            {\r\n              name: \"abel\",\r\n              email: \"abel@mit.edu\",\r\n              password: \"secret\",\r\n              balance: 100,\r\n            },\r\n          ],\r\n        }}\r\n      >\r\n        <div className=\"container\" style={{ padding: \"20px\" }}>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/CreateAccount/\" component={CreateAccount} />\r\n          <Route\r\n            path=\"/deposit/\"\r\n            render={(props) => (\r\n              <Deposit balance={balance} setBalance={setBalance} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/withdraw/\"\r\n            render={(props) => (\r\n              <Withdraw balance={balance} setBalance={setBalance} />\r\n            )}\r\n          />\r\n          <Route path=\"/balance/\" component={Balance} />\r\n          <Route path=\"/alldata/\" component={AllData} />\r\n        </div>\r\n      </UserContext.Provider>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nReactDOM.render(<Spa />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}